name: PR Checks

on:
  pull_request:
    branches: [ main, development ]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: database.db

# Cancel previous runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick checks that must pass before detailed testing
  pre-checks:
    name: Pre-flight Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check Rust formatting
      run: cargo fmt --all -- --check

    - name: Quick compile check
      run: cargo check --workspace

    - name: Clippy lints
      run: cargo clippy --all-targets --all-features -- -D warnings

  # Fast test suite for immediate feedback
  quick-tests:
    name: Quick Test Suite
    runs-on: ubuntu-latest
    needs: pre-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y sqlite3

    - name: Install Diesel CLI
      run: cargo install diesel_cli --no-default-features --features sqlite --locked

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install npm dependencies
      run: npm ci

    - name: Setup database
      run: |
        echo "DATABASE_URL=database.db" > .env
        diesel setup
        diesel migration run

    - name: Build CSS
      run: npm run build-css-prod

    - name: Run unit tests
      run: cargo test -p wwe-universe-manager --test shows --test users

    - name: Test frontend compilation
      run: cargo test -p wwe-universe-manager-ui --no-run

  # Security and dependency checks
  security-check:
    name: Security & Dependencies
    runs-on: ubuntu-latest
    needs: pre-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install cargo-audit
      run: cargo install cargo-audit --locked

    - name: Run security audit
      run: cargo audit

    - name: Install cargo-deny
      run: cargo install cargo-deny --locked

    - name: Check dependencies
      run: cargo deny check

  # Documentation and link checking
  docs-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    needs: pre-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check documentation
      run: cargo doc --no-deps --workspace

    - name: Setup Node.js for Mintlify
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Mintlify CLI
      run: npm install -g mintlify

    - name: Check Mintlify documentation
      run: |
        cd docs
        mintlify broken-links

  # Require all checks to pass
  pr-ready:
    name: PR Ready for Review
    runs-on: ubuntu-latest
    needs: [pre-checks, quick-tests, security-check, docs-check]
    if: always()
    
    steps:
    - name: Check all jobs succeeded
      run: |
        if [ "${{ needs.pre-checks.result }}" != "success" ] || \
           [ "${{ needs.quick-tests.result }}" != "success" ] || \
           [ "${{ needs.security-check.result }}" != "success" ] || \
           [ "${{ needs.docs-check.result }}" != "success" ]; then
          echo "❌ One or more required checks failed"
          exit 1
        fi
        echo "✅ All PR checks passed - ready for review!"